Reff ansible adhoc reff https://docs.ansible.com/ansible/latest/command_guide/intro_adhoc.html
===========================================ansible server===========================================

[ec2-user@ip-172-31-87-130 ~]$ sudo su -

[root@ip-192-168-10-149 ~]# hostnamectl set-hostname server

[root@server ~]# hostname -i
fe80::1065:ecff:fefe:7dc9%enX0 172.31.87.130


[root@ip-172-31-87-130 ~]# ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa
Your public key has been saved in /root/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:DoTNF3Sdl5v27dNmqwMUVk+wBKiy07/lDPTSYEkX564 root@ip-172-31-87-130.ec2.internal
The key's randomart image is:
+---[RSA 3072]----+
|       .o o+o*.o |
|     +   + oB *  |
|    . + o....+ + |
|     o o. o.. +  |
|      = S=.  o ..|
|     o +o +..   o|
|      . oo E.  ..|
|         .*  . .=|
|         ..o .o+o|
+----[SHA256]-----+


[root@ip-172-31-87-130 ~]# cd  /root/.ssh/
[root@ip-172-31-87-130 .ssh]# ls
authorized_keys  id_rsa  id_rsa.pub


[root@ip-172-31-87-130 .ssh]# cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDMPBVKCMzhFwd45noCI/8XOio4ccopHWlTscsYVogUwAwnIRY4qr+LgfgO/cB2r/g3begMwOZYS/+TPr6gypRLUT53QA/eNgkQrqsZSb5y+LmLWqBfzTqAgX0Oxa7WZHuNzWI3//T3I3GzDzulnhmPWgJUo1qWYOogrRATzRuqiw2k2Dqlbg7z579NzCMpDClzd2FSIgcaPOZwhYfjt4qV2LhY7Z2VZ3g3eSVCAfojxGluI992Y/SO4nxEE5iwDBdIcfnlJf7BQZOuLUKigK4X1Yre0vUQ61kxYnOBQJy+xE5+CWv0XQpuEJyzh20J6xOT1RyFeDhpoWs8OuRdO4NUivSjhrJIO6tLPstuW27WrQgAljx5oJ/e5jDIwWp6n12ygmjvhu/E5Qa0sobw9WyI1Zl2ji5d9doPcTqYWuivdswc/bsBFuyJWbyigRBGAoALEaxTC5K/o1+LkxBLg1UbWlb3wzICCqSoPlqtVFXaj0hx12qnb81rxrADxScveK8= root@ip-172-31-87-130.ec2.internal

Copy above and paste it below client server

===========================================ansible client server===========================================

[ec2-user@ip-172-31-25-16 ~]$ sudo su -
[root@ip-172-31-25-16 ~]# cd /root/.ssh
[root@ip-172-31-25-16 .ssh]# ls
authorized_keys
[root@ip-172-31-25-16 .ssh]# vi authorized_keys


===========================================ansible server===========================================

ssh to private IP of client server

[root@ip-172-31-87-130 .ssh]# ssh root@172.31.25.16
The authenticity of host '172.31.25.16 (172.31.25.16)' can't be established.
ED25519 key fingerprint is SHA256:Pbtzg9/nSdvrXDtp7bwWfu1xuHZobc1DeEX9bndReh4.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '172.31.25.16' (ED25519) to the list of known hosts.
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Sat Apr 12 04:46:12 2025
[root@ip-172-31-25-16 ~]#


[root@ip-172-31-87-130 ~]# yum install ansible


[root@ip-172-31-87-130 ~]# ansible --version
ansible [core 2.15.3]
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.9/site-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.9.21 (main, Mar 19 2025, 00:00:00) [GCC 11.5.0 20240719 (Red Hat 11.5.0-5)] (/usr/bin/python3.9)
  jinja version = 3.1.4
  libyaml = True


[root@server .ssh]# cd /etc/ansible/
[root@server ansible]# ll
total 4
-rw-r--r--. 1 root root 149 Apr 12 05:04 hosts
drwxr-xr-x. 2 root root   6 Mar 24 18:48 roles


[root@server ansible]# vi hosts
[linux]
172.31.87.130 --> same server private ip
172.31.25.16 --> client server private ip
172.31.25.17 --> invalid server

[webserver]
172.31.87.130
172.31.25.16
172.31.25.17

[prod]
172.31.87.130
172.31.25.16
172.31.25.17


[root@ip-172-31-87-130 ansible]# ansible linux -m ping
The authenticity of host '172.31.87.130 (172.31.87.130)' can't be established.
ED25519 key fingerprint is SHA256:b1DfwJD+8x1+rg1+pcjxp+ui6MgksKk09tXkHMrCxts.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? [WARNING]: Platform linux on host 172.31.25.16 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter could change the
meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
172.31.25.16 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.9"
    },
    "changed": false,
    "ping": "pong"
}
172.31.25.17 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host 172.31.25.17 port 22: Connection timed out",
    "unreachable": true
}


notice above that same server ping did not work

[root@server ansible]# cd /root/.ssh/
[root@server .ssh]# ll
total 20
-rw-------. 1 root root  554 Apr 12 04:31 authorized_keys
-rw-------. 1 root root 2622 Apr 12 04:43 id_rsa
-rw-r--r--. 1 root root  588 Apr 12 04:43 id_rsa.pub
-rw-------. 1 root root  268 Apr 12 04:53 known_hosts
-rw-r--r--. 1 root root   94 Apr 12 04:53 known_hosts.old
[root@server .ssh]# cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDMPBVKCMzhFwd45noCI/8XOio4ccopHWlTscsYVogUwAwnIRY4qr+LgfgO/cB2r/g3begMwOZYS/+TPr6gypRLUT53QA/eNgkQrqsZSb5y+LmLWqBfzTqAgX0Oxa7WZHuNzWI3//T3I3GzDzulnhmPWgJUo1qWYOogrRATzRuqiw2k2Dqlbg7z579NzCMpDClzd2FSIgcaPOZwhYfjt4qV2LhY7Z2VZ3g3eSVCAfojxGluI992Y/SO4nxEE5iwDBdIcfnlJf7BQZOuLUKigK4X1Yre0vUQ61kxYnOBQJy+xE5+CWv0XQpuEJyzh20J6xOT1RyFeDhpoWs8OuRdO4NUivSjhrJIO6tLPstuW27WrQgAljx5oJ/e5jDIwWp6n12ygmjvhu/E5Qa0sobw9WyI1Zl2ji5d9doPcTqYWuivdswc/bsBFuyJWbyigRBGAoALEaxTC5K/o1+LkxBLg1UbWlb3wzICCqSoPlqtVFXaj0hx12qnb81rxrADxScveK8= root@ip-172-31-87-130.ec2.internal
[root@server .ssh]# vi authorized_keys

paste above id_rsa.pub in authorized_keys


now run the same command and observe connectivity

[root@server ~]# ansible linux -m ping
[WARNING]: Platform linux on host 172.31.87.130 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter could change the
meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
172.31.87.130 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.9"
    },
    "changed": false,
    "ping": "pong"
}
[WARNING]: Platform linux on host 172.31.25.16 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter could change the
meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
172.31.25.16 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.9"
    },
    "changed": false,
    "ping": "pong"
}
172.31.25.17 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host 172.31.25.17 port 22: Connection timed out",
    "unreachable": true
}



[root@ip-172-31-87-130 ansible]# ansible all -m command -a hostname
The authenticity of host '172.31.87.130 (172.31.87.130)' can't be established.
ED25519 key fingerprint is SHA256:b1DfwJD+8x1+rg1+pcjxp+ui6MgksKk09tXkHMrCxts.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? [WARNING]: Platform linux on host 172.31.25.16 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter could change the
meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
172.31.25.16 | CHANGED | rc=0 >>
ip-172-31-25-16.ec2.internal
172.31.25.17 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host 172.31.25.17 port 22: Connection timed out",
    "unreachable": true
}
^C [ERROR]: User interrupted execution


[root@ip-172-31-87-130 ansible]# ansible all -m command -a pwd
The authenticity of host '172.31.87.130 (172.31.87.130)' can't be established.
ED25519 key fingerprint is SHA256:b1DfwJD+8x1+rg1+pcjxp+ui6MgksKk09tXkHMrCxts.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? [WARNING]: Platform linux on host 172.31.25.16 is using the discovered Python interpreter at /usr/bin/python3.9, but future installation of another Python interpreter could change the
meaning of that path. See https://docs.ansible.com/ansible-core/2.15/reference_appendices/interpreter_discovery.html for more information.
172.31.25.16 | CHANGED | rc=0 >>
/root
172.31.25.17 | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: ssh: connect to host 172.31.25.17 port 22: Connection timed out",
    "unreachable": true
}


ansible-doc -l

=========================================== Ansible Playbook ===========================================

# Reff : https://docs.ansible.com/ansible/latest/collections/all_plugins.html

What is an Ansible Playbook?
An Ansible playbook is a file that contains a set of instructions that Ansible can use to automate tasks on remote hosts.
Playbooks are written in YAML, a human-readable markup language.

A playbook typically consists of one or more plays, a collection of tasks run in sequence.
Each task is a single instruction that Ansible can execute, such as installing a package, configuring a service, or copying a file.

By using Ansible playbooks, IT operations teams can automate infrastructure provisioning, configuration management, application deployment, and other operational tasks.
Playbooks provide a concise and human-readable way to describe the desired automation workflows, making managing and scaling infrastructure configurations easier.

# what-is-an-ansible-playbook 
An Ansible® Playbook is a blueprint of automation tasks, which are IT actions executed with limited manual effort across an inventory of IT solutions.
Playbooks tell Ansible what to do to which devices.
instead of manually applying the same action to hundreds or thousands of similar technologies across IT environments,
executing a playbook automatically completes the same action for the specified type of inventory—such as a set of routers.
Playbooks also serve as frameworks of prewritten code that developers can use ad-hoc or as a starting template.

[root@server ~]# cat myplay.yaml
---
 - name: Finding uptime and free ram
   hosts: all
   tasks:
   - name: Finding uptime
     shell: uptime
     register: up_time
   - debug:
       var: up_time.stdout_lines
   - name: Finding RAM info
     shell: free -g
     register: ram_info
   - debug:
       var: ram_info.stdout_lines
	   
[root@server ~]# ansible-playbook /root/myplay.yaml