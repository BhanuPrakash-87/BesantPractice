-------------------
Linux Architecture
-------------------
HARDWARE <- KERNEL <- SHELL <- USER
kernel is the core of the operating system, acting as the bridge between hardware and software.
It manages all the essential low-level functions of the computer, like memory management, process scheduling, and device interaction.
The kernel loads into memory during startup and remains there until the system shuts down.

------------
File System
------------
etc -> user configuration, dev -> drivers, bin -> binary scripts, lib -> library files

--------------------------------------------------
Install Linux environment in windows using Ubuntu
--------------------------------------------------
Go to windows search bar and search for “turn windows features on or off” option and select the option.
scroll down and select the option “windows Subsystem for Linux” and "Virtual Machine Platform" and click ok.
Restart system.

once the system is restarted , open cmd prompt and type "bash"
Bash, short for "Bourne Again SHell", is a powerful command-line interpreter and scripting language.
Bash provides a command-line interface (CLI), allowing users to interact with the Linux system by typing commands in a terminal.

Open the installed "Ubuntu",
If there is an error, update wsl (wsl --update)
WSL (Windows Subsystem for Linux), is a feature in Windows that allows you to run a Linux environment directly on your Windows machine.

Note it asks for user name and password for the user and it also automatically cretes the root account. 
=============================================================================================================================================

ls /mnt  ----==>  it shows all the drive folders of the system

---------------
Setup Commands
---------------
adduser <username>  ----==>  Create user in the Linux OS. User with credentials and other user information stored in /etc/passwd file.
cat /etc/passwd  ----==>  Shows all the information of the users present in the Linux system.
login <username>  ----==>   Will directly tried to login gto particular user.
passwd  ----==>  Change the password of the current logged in user.
whoami  ----==>  Command will tell who you are or your username.
users  ----==>  This command tells that  who all users logged in to the computer at the same time.
whoami  ----==>  Command will tell who you are or your username.
users  ----==>  This command tells that who all users logged in to the computer at the same time.
who  ----==>  Same as above with additional information like what date and what time they have logged in.
w  ----==>  Same as above with additional information along with many more useful info abt the users who logged in.

-----
Find
-----
(. -> current directory, / -> root directory)
find . -name '*.txt'  ----==>  Find all the files under the current directory with .txt extension and print the relative path of each file matching.
                               It finds recurcievely one inside another folder.
find / -name '*.txt'  ----==>  Find all the files based on root directory.
find / -type d -name te*   ----==>  Find all the folders recuercievely which starts with te* (d indicates directory)
find / -type d -name temp or -name test 2>/dev/null  ----==>  Finds all the folders which is either temp or test using or operator
                                                              2> to supress all warning messages
find . -type f -size +100c  ----==>  search files that have more than 100 characters (bytes) in them (f indicates file)
find . -type f -size +100k -size -1M  ----==>  Search files bigger than 100KB but smaller than 1MB
find . -type f -mtime +3  ----==>  Search files edited more than 3 days ago
find . -type f -mtime -1  ----==>  Search files edited in the last 24 hours
find . -type f -mtime -1 -delete  ----==>  deletes all the files edited in the last 24 hours.

--------
Linking
--------
ln 1.txt ln1.txt  ----==>  Hard link, new file will be created and we cannot distinguish from a regular file
ln -s 1.txt ln1.txt  ----==>  Soft link, if you delete the original file, the links will be broken, and the shell will tell you "No such file or
                              directory" if you try to access it

-----
gzip
-----
gzip -cv *.txt > myfiles.gz  ----==>  (-c create new file leaving the original file intact, -v view progress)
gzip -d myfiles.gz  ----==>  decompress the file

-------
gunzip
-------
gunzip myfiles.gz  ----==>  unzip the compressed file

----------------
Create tar file
----------------
tar -cvf myfiles.tar *.txt  ----==>  create tar file
tar -xvf myfiles.tar  ----==>  extract tar file
tar -czf temp.tar.gz *.tar  ----==>  We an creted a compressed gzip file for the tar file using -z option
gzip -d temp.tar.gz  ----==>  Extract the above zip file

------
Alias
------
alias home='cd /home/bhanu'  ----==>  The alias will work until the terminal session is closed.
                                      To make it permanent, you need to add it to the shell configuration,
                                      which could be ~/.bashrc or ~/.profile or ~/.bash_profile if you use the Bash shell
